#JSP 구성요소

======================================================================================================================

1. 지시요소(directive)

- 지시어는 JSP에 대한 설정 정보 또는 JSP 페이지에 다른문서를 포함시킬 때 사용.

[page]
<%@ page info="tomcat에 지시할 사항을 적는 부분" %>
<%@ page import="java.util.ArrayList, java.util.Date" %>
<%@ page errorPage="error.jsp" %>
<%-- import 속성을 제외한 다른 속성은 두 번 이상 사용하면 error --%>

[include]
<%@ include file="inner.jsp" %>
<jsp:include page="inner2.jsp"/>

======================================================================================================================

2. 스크립팅 요소

- 스크립트 요소는 페이지의 동적 데이터를 생성

[선언(delcaration)] : 멤버 필드나 메소드 선언시 사용.(JSP 페이지 내부에 자바 메소드를 선언한다.)
<%!
	int count = 100;
	public String hello(String name){
		return "hello,," +name;
	}
%>

[식] : 출력(변수, 메소드 호출 결과, 계산 값 등, ;을 붙이지 않는다)결과에 값을 넣기 위해 사용.
count: <%= count %><br>
hello(): <%= hello("tommy") %><br>

[스크립트렛(scriptlet)] : JSP 페이지 내부에 자바 소스코드 삽입.

//scriptingtest.jsp
<%
	int num = 123;
	out.println(++num);
%>
<hr>
num: <%= ++num %><br>

//looptest.jsp
<%
	int count = 1;
	for(int i=1; i<=5; i++){
%>
<%= i %>.hello<hr>
<%} %>

======================================================================================================================

3. 액션 태그

[jsp:forward] : 하나의 JSP 페이지에서 다른 JSP 페이지로 요청 처리를 전달할 때 사용한다.

//login.html
<form action="forward.jsp" method="post">
아이디: <input type="text" name="id"><br>
암호: <input type="password" name="pass"><br>
<input type="submit" value="전송">
<input type="reset" value="취소">

//forward.jsp
<%
	//이전 화면에서 보낸 값 받아서 체크 후 다음 화면으로 forward
	String id = request.getParameter("id");
	String pass = request.getParameter("pass");
	if(id.equals("tom") && pass.equals("123")){
		
%>
	<jsp:forward page="welcome.jsp">
		<jsp:param value="<%= id %>" name="id"/>
	</jsp:forward>
<%} else{ %>

	<jsp:forward page="login.html"/>
<%} %>

======================================================================================================================

4. 내장객체(Implicit Object)

- JSP 컨테이너에 의해 개발자들이 명시적으로 선언하지 않고 바로 사용할 수 있는 자바객체이며 사전 정의된 객체를 뜻한다.

request     : 클라이언트에서 서버로 보내지는 요청과 관련된 객체
response    : 서버에서 클라이언트로 보내지는 응답과 관련된 객체
out         : 출력을 클라이언트로 보내는 객체
sessiong    : 서버측 웹 컨에티너에 사용자의 상태를 관리하는 객체
application : 어플리케이션 전반에 걸친 정보를 관리하는 객체
config      : 페이지와 관련된 서블릿 설정 객체
pageContext : 현재 페이지의 내용을 저장하고 있는 객체
page        : 페이지에 대한 실제 인스턴스(java class)를 저장하고 있는 객체
Exception   : 이전 페이지의 에러를 저장하고 있는 객체

일반적으로 exception 위의 8가지만 사용 가능 
★ <%@ page isErrorPage="true" %> true 값이어야 exception 객체까지 사용할 수 있다. ★
<%-- isErrorPage : error 처리 페이지가 반드시 가져야 되는 지시어 속성 
내장 객체 중 exception 객체를 사용할 수 있음 --%>

//error.jsp
<%@ page isErrorPage="true" %> 

<h1>예외 발생</h1>
예외 종류: <%= exception.getClass().getName() %><br>
메시지: <%= exception.getMessage() %><br>
























